version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: liga-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-liga_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/migrations:/docker-entrypoint-initdb.d
    networks:
      - liga-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: liga-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: ${PORT:-3000}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-liga_db}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      FIREBASE_SERVICE_ACCOUNT_PATH: ${FIREBASE_SERVICE_ACCOUNT_PATH}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      # Montar credenciais Firebase (não incluído na imagem por segurança)
      - ./config/firebase-service-account.json:/app/config/firebase-service-account.json:ro
      # Volume para uploads temporários
      - uploads_data:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - liga-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (opcional - para cache futuro)
  redis:
    image: redis:7-alpine
    container_name: liga-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - liga-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes

volumes:
  postgres_data:
    name: liga-postgres-data
  redis_data:
    name: liga-redis-data
  uploads_data:
    name: liga-uploads-data

networks:
  liga-network:
    name: liga-network
    driver: bridge
